strdef fitFile,timesFile,paramsFile,stimFile,outFile,modelFile,outFPre,base
objref st,stims,fin,fout,pmat,matOut,stimtime,somaref,secref,extVec,strFunc,most,root,transvec

ntimestep = 3168 
nparams = 3 
psize = 1024 
ntraces = 1 
v_init = -80 
calc_eca = 1 


   stLoc = 0.21 
base = "/global/project/projectdirs/m2043/zladd/NeuroGPU/NeuroGPU_Base" 
paramsFile = "/global/project/projectdirs/m2043/zladd/NeuroGPU/Figures/Figure3_passive/params/params.csv" 
stimFile = "/global/project/projectdirs/m2043/zladd/NeuroGPU/Figures/Figure3_passive/Stims/Step_8_.csv" 
modelFile = "/global/project/projectdirs/m2043/zladd/NeuroGPU/Figures/Figure3_passive/mosinit.hoc" 
timesFile = "/global/project/projectdirs/m2043/zladd/NeuroGPU/Figures/Figure3_passive/Stims/times.csv" 

transvec = new Vector(nparams)

fin = new File()
fout = new File()
load_file(modelFile)


root = new SectionRef()
if (root.has_parent()){
	print secname()
	root = root.root()
	}
access cADpyr232_L5_TTPC1_0fb1ca4724[0].soma

create Exts[1]
objref recSites
recSites = new SectionList()
outFPre = "./volts/orig_step"
access root.sec
print "**********************"
print secname()
root.sec recSites.append()


 
secondorder=0
proc runMatrix(){

	//access dend[1]
	sprint(outFile,"%s_%s.dat",outFPre,secname())

	st.del=0 
	st.dur=1e9
	//printf ("$o1.nrow,$o2.nrow,$o2.ncol,%d,%d,%d",$o1.nrow,$o2.nrow,$o2.ncol)
	matOut = new Matrix($o1.nrow,($o2.nrow*$o2.ncol))
	for(sim=0;sim<$o1.nrow;sim+=1){
	//printf("running sim %d\n",sim)
		counter=0
		transvec = $o1.getrow(sim)
		tfunc()
		for(i=0;i<stims.nrow;i+=1){
			finitialize(v_init)
			for(tt =0;tt<stimtime.ncol;tt+=1){
			dt  =stimtime.x(0,tt)

				st.amp = 1*stims.x(i,tt)

				matOut.x(sim,counter)=v(0.5)
				counter+=1
				fadvance()
				
			}
		}
	}
	//printf("finshed run matrix %s\n",outFile)
}
strFunc = new StringFunctions()
proc readMatrix(){localobj temp
	csv_ind = strFunc.substr($s1,"csv")
	if (csv_ind==-1){
		temp = new Vector()
		fin.ropen($s1)
		for (i=0;i<$o2.nrow;i+=1){
			temp.vread(fin)
			$o2.setrow(i,temp)
			//print i
		}
		fin.close()
	} else {
	readCSVMatrix($s1,$o2)
	}
}

proc readCSVMatrix(){
	fin = new File($s1)
	fin.ropen()
	print $o2.nrow()
	$o2.scanf(fin,$o2.nrow(),$o2.ncol())
	fin.close()
}
proc writeMatrix(){localobj temp
	fout.wopen($s1)
	temp = new Vector()
	for (i=0;i<$o2.nrow;i+=1){
		temp = $o2.getrow(i)
		temp.vwrite(fout,3)
	}
	fout.close()
}
proc mul32(){localobj thisone
	countSegs()
	segsMat = segs+comps+1 
	//printf("1we have a matrix in the size of %d \n",segsMat )
	segsToAdd = 32-segsMat%32
	forall {
		thisone = new SectionRef()   
		if (thisone.nchild == 0 ) {
			break
			}
	}
	access thisone.sec
	nseg = nseg+segsToAdd
	fcurrent()
	countSegs()
	//printf("we have a matrix in the size of %d \n",segs+comps+1 )
	
}
proc writeVector(){
	fout.aopen($s1)
	$o2.vwrite(fout,3)
	fout.close()
	
}
proc printChildren(){localobj sl
	sl = new SectionList()
	sl.children()
	u=0
	forsec sl{
	print secname()
	u+=1
	}
	print u
}	
proc printparent(){localobj sref
	sref = new SectionRef()
	sref.parent
	print secname()
}		


proc countSegs(){
segs=0
comps=0
	forall{
		segs+=nseg
		comps+=1
	}
}
create Exts[1]		
proc hinesDisperseBranching(){local i localobj sl,secRef, clist, avec, bvec		
	counter = 0		
	forsec most{		
		secRef = new SectionRef()		
		if(secRef.nchild>2){		
clist = new List()		
  for i=0, secRef.nchild-1 {		
    secRef.child[i] clist.append(new SectionRef())		
  }		
			Exts[counter]{		
				L = 1e-9		
				diam = 1		
				Ra = secRef.sec.Ra		
				cm = secRef.sec.cm	
				nseg = secRef.nchild-1		
			}		
			i=0		
			Exts[counter]{		
				for(x){ 		
					if (x > 0) {		
						avec =new Vector()		
						bvec =new Vector()		
						//printf("x is %f i is %d\n",x,i)		
						clist.o(i).sec{		
							avec =new Vector()		
							bvec =new Vector()		
							for(y){		
								avec.append(GetA(y))		
								bvec.append(GetB(y))		
							}		
						}		
						connect clist.o(i).sec(0), x		
						 k=0		
					  clist.o(i).sec{		
							for(y){		
								SetA(y,avec.x(k))		
								SetB(y,bvec.x(k))		
							}		
						}		
						i +=1		
							
					}		
							
							
				}		
						
			}		
			fcurrent()		
			secRef {		
				connect Exts[counter](0), 1		
			}		
			Exts[counter]{		
				for(x){ 		
			//printf("x is %f and sec is %s\n",x,secname())		
					SetA(x,0)		
					SetB(x,0)		
					}		
				}		
					
	counter+=1				
		}		
	}
		//print "printing counter"
		//print counter
		
		
}

proc countExts(){
ext_num=0
forsec most {
	somaref= new SectionRef()
	if (somaref.nchild>2){
		ext_num+=1
	}
	}
	
	//printf("ext_num is %d", ext_num)
}



proc PrintRecSites(){localobj sref
	recSites.printnames()
}	
stimtime = new Matrix(1,ntimestep)
readMatrix(timesFile,stimtime)
pmat = new Matrix(psize,nparams)
readMatrix(paramsFile,pmat)
stims = new Matrix(ntraces,ntimestep)
readCSVMatrix(stimFile,stims)
forsec "dend" nseg=1
forsec "apic" nseg=1
	
//topology()
most = new SectionList()
forall most.append()
countExts()
fcurrent()
//fmatrix()
//printf("Creating Exts %d\n",ext_num)
//printf("Creating Exts %d\n",ext_num)
if(ext_num>0){
	create Exts[ext_num]
	}	else{
	access Exts[0]
		delete_section()
	}
//****************************************************
forall{nseg=1}
//******************************************************
hinesDisperseBranching()

mul32()
access root.sec
transvec = pmat.getrow(0)
tfunc()
st = new IClamp(0.5)



 
finitialize(v_init)



//runMatrix(pmat,stims)
//writeMatrix(outFile,matOut)
finitialize(v_init)
//ADD STUFF HERE

//quit()// Start topologyList output

// Start mechanisms output
objref mt,ms,fn,pp
strdef s,ss,mname
mt = new MechanismType(0)
fn = new File()
fn.wopen("64MDL.csv")
forall{
	fn.printf("#%s\n",secname())
	if (ismembrane("pas")){
		fn.printf("g_pas = %f\n",g_pas)
		fn.printf("e_pas = %f\n",e_pas)
	}
	for i=0, mt.count()-1 {
		mt.select(i)
		mt.selected(mname)
		if (ismembrane(mname)){
			ms = new MechanismStandard(mname,-1)
			for j=0, ms.count()-1 {
				k = ms.name(s, j)
				sprint(ss,"temp=%s",s)
				execute(ss)
				fn.printf("%s = %f\n",s,temp)
			}
			ms = new MechanismStandard(mname,3)
			for j=0, ms.count()-1 {
				k = ms.name(s, j)
				sprint(ss,"temp=%s",s)
				execute(ss)
				fn.printf("%s = %f\n",s,temp)
			}
		}
	}
}
fn.close()
// End mechanisms output
// Start point processess mechanisms output
fn = new File()
fn.wopen("64PP.csv")
forall{
	fn.printf("#%s\n",secname())
	mt = new MechanismType(1)
	mt.select("IClamp")
	for (pp = mt.pp_begin(); object_id(pp) != 0; pp = mt.pp_next()) {
		x = pp.get_loc()
		del1 = pp.del
		dur1 = pp.dur
		amp1 = pp.amp
		fn.printf("IClamp,%g, %g, %g, %g, ", x, del1, dur1, amp1)
		pop_section()
	}
	fn.printf("\n")
}
fn.close()
// End point processess mechanisms output
// Start params output
objref fn2
fn2 = new File()
proc writeReversals(){
}
proc writeGGlobals(){
a=celsius
fn.vwrite(&a)
a=stoprun
fn.vwrite(&a)
a=clamp_resist
fn.vwrite(&a)
a=secondorder
fn.vwrite(&a)
}
proc writeNGlobals(){
}
proc proc0(){
access cADpyr232_L5_TTPC1_0fb1ca4724[0].soma[0]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[0]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[1]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[2]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[3]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[4]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[5]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[6]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[7]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[8]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[9]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[10]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[11]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[12]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[13]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[14]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[15]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[16]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[17]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[18]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[19]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[20]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[21]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[22]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[23]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[24]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[25]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[26]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[27]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[28]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[29]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[30]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[31]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[32]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[33]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[34]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[35]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[36]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[37]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[38]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[39]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[40]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[41]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[42]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[43]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[44]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[45]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[46]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[47]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[48]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[49]
}
proc proc1(){
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[50]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[51]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[52]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[53]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[54]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[55]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[56]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[57]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[58]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[59]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[60]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[61]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[62]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[63]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[64]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[65]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[66]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[67]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[68]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[69]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[70]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[71]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[72]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[73]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[74]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[75]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[76]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[77]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[78]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[79]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[80]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[81]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[82]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[83]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[84]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[85]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[86]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[87]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[88]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[89]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[90]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[91]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[92]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[93]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[94]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[95]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[96]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[97]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[98]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[99]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[100]
}
proc proc2(){
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[101]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[102]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[103]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[104]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[105]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[106]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[107]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[108]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[109]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[110]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[111]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].dend[112]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[0]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[1]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[2]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[3]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[4]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[5]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[6]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[7]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[8]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[9]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[10]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[11]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[12]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[13]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[14]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[15]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[16]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[17]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[18]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[19]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[20]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[21]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[22]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[23]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[24]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[25]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[26]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[27]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[28]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[29]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[30]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[31]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[32]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[33]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[34]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[35]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[36]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[37]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[38]
}
proc proc3(){
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[39]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[40]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[41]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[42]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[43]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[44]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[45]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[46]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[47]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[48]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[49]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[50]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[51]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[52]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[53]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[54]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[55]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[56]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[57]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[58]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[59]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[60]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[61]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[62]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[63]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[64]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[65]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[66]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[67]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[68]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[69]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[70]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[71]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[72]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[73]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[74]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[75]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[76]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[77]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[78]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[79]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[80]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[81]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[82]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[83]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[84]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[85]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[86]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[87]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[88]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[89]
}
proc proc4(){
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[90]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[91]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[92]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[93]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[94]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[95]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[96]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[97]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[98]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[99]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[100]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[101]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[102]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[103]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[104]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[105]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[106]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[107]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[108]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[109]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[110]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[111]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[112]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[113]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[114]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[115]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[116]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[117]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[118]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[119]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[120]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[121]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].apic[122]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].axon[0]
access cADpyr232_L5_TTPC1_0fb1ca4724[0].axon[1]
access Exts[0]
access Exts[1]
}
proc printParams(){
fn.wopen("ParamM.dat")
fn2.wopen("KinStates.dat")
writeReversals()
writeGGlobals()
writeNGlobals()
for (ii=0;ii<pmat.nrow();ii+=1){
transvec = pmat.getrow(ii)
tfunc()
finitialize()
fadvance()
fcurrent()
proc0()
proc1()
proc2()
proc3()
proc4()
}
fn.close()
}
printParams()
// End params output
// Start Mat Output
fcurrent()
MyPrintMatrix3()
// endMat Output

MyPrintMatrix3()

// End Fmatrix
// Start Recording Sites
//hoc_stdout("RecList.csv")
PrintRecSites()

quit()

